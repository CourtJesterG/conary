#!/usr/bin/python
import os
import sys

from conary import files
from conary.repository.netrepos import netserver

cfgpath = sys.argv[1]
cfg = netserver.ServerConfig()
cfg.read(cfgpath)
netrepos = netserver.NetworkRepositoryServer(cfg, '')
store = netrepos.repos.contentsStore
cu = netrepos.db.cursor()
cu.execute("SELECT stream FROM FileStreams WHERE stream IS NOT NULL")
if hasattr(store, 'hashToPath'):
    fmt = lambda x: store.hashToPath(x)[len(store.top)+1:]
else:
    fmt = lambda x: x.encode('hex')
sha1s = set()
for fileStream, in cu:
    if (not files.frozenFileFlags(fileStream).isEncapsulatedContent()
            and files.frozenFileHasContents(fileStream)):
        cont = files.frozenFileContentInfo(fileStream)
        sha1s.add(fmt(cont.sha1()))
for x in sorted(sha1s):
    print x
